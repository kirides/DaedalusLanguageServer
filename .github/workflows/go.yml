name: Create Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

env:
  BINARY_NAME: DaedalusLanguageServer

jobs:
  
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22.x'

    - name: try building
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Setup final build env
      run: |
        export tagName=${GITHUB_REF/refs\/tags\//}
        echo "Tag: ${tagName}"
        echo "RELEASE_VERSION=${tagName}" >> $GITHUB_ENV
        echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
        echo "GOOS=${{ matrix.os }}" >> $GITHUB_ENV

    - name: Adjust naming for Windows
      if: matrix.os == 'windows'
      run: |
        export BINARY_NAME=$BINARY_NAME.exe
        echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

    - name: Build
      run: go build -v -o $BINARY_NAME -ldflags '-extldflags "-static" -s -w' ./cmd/DaedalusLanguageServer/

    - name: Calculate distribution hash
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        sha256sum "$BINARY_NAME" > "$BINARY_NAME.sha256"
        cat "$BINARY_NAME.sha256"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{matrix.arch}}
        path: |
          ${{ env.BINARY_NAME }}
          ${{ env.BINARY_NAME }}.sha256

    - name: Create Zip
      run: zip -D ${{ matrix.os }}_${{ matrix.arch }}.zip "$BINARY_NAME" "${{ env.BINARY_NAME }}.sha256"

    - name: Create github release
      run: |
        gh release create $RELEASE_VERSION --generate-notes
        exit 0
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Upload zip to release
      run: |
        gh release upload $RELEASE_VERSION "${{ matrix.os }}_${{ matrix.arch }}.zip"
        gh release edit $RELEASE_VERSION --draft=false --prerelease=true
        exit 0
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
